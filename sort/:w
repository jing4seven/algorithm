/*
 * 快速排序：
 *
 */
#include <iostream>
#include <vector>
#include <time.h>
#include <assert.h>

#define random(x) (rand()%x)

using namespace std;

void printsource(vector<int> &source) {
    vector<int>::iterator itr = source.begin();
    while (itr != source.end()) {
        cout << *itr << ",";
        ++itr;
    }

    cout << "\n";
}

// quick sort
void qsort(vector<int> &source, int start, int end) {
    srand((int)time(0));
    int pos = start+random(end-start+1);
    int i,j, t,tmp, posint;
    i   = start;
    j   = end;
    t = 0;
    tmp = 0;
    posint = source[pos];

    //cout << pos << endl;
    //printsource(source);
    // 边界条件：
    // 1. i和j重合;
    while (i<j) {
        while (source[i]< source[pos])
            ++i;

        while (source[j]> source[pos])
            --j;

        // swap source[i], source[j]
        if (i<j && i!=pos && j!=pos) {
            tmp = source[i];
            source[i] = source[j];
            source[j] = tmp;
        } else if (i== pos && j!=pos) {
            tmp = source[j];
            t = j;
            while (t > pos) {
                source[t] = source[t-1];
                --t;
            }
            if (pos<j)
                pos++;
            source[i] = tmp;
        } else if ( i!=pos && j == pos) {
           tmp = source[i];
           t = i;
           while (t < pos) {
              source[t] = source[t+1];
              ++t;
           }
           if (pos>i)
               pos--;
           source[j] = tmp;
        }
    }

    cout << pos << endl;
    printsource(source);

    if (start+1< pos-1)
        qsort(source, start, pos-1);
    if (pos+1<end)
        qsort(source, pos+1, end);

    return;
}


int main(int argc, char * argv[]) {
    vector<int> source;
    int i = 0;
    int tmp = 0;

    srand((int)time(0));
    while (i < 10) {
        tmp = random(1000);
        source.push_back(tmp);
        ++i;
    }


    vector<int>::iterator itr = source.begin();
    while (itr != source.end()) {
        cout << *itr << ",";
        ++itr;
    }

    cout << "\n";

    qsort(source, 0, (int)( source.size() -1 ));

    itr = source.begin();
    while (itr != source.end()) {
        cout << *itr << ",";
        ++itr;
    }

    cout << "\n";

    return 0;
}
